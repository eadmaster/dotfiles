#!/bin/sh

# from libarchive-zip-perl:
#command -p crc32 "$@"
#_ES=$? ; [ $_ES -ne 127 ] && exit $_ES

# using rhash
rhash -C --simple "$@"
_ES=$? ; [ $_ES -ne 127 ] && exit $_ES

# using python+zlib  http://rosettacode.org/wiki/CRC-32#Python
python -c "import zlib; print('%08x  $@' % (zlib.crc32(open(\"$@\").read()) & 0xFFFFFFFF))"
[ $? -eq 0 ] && exit 0
# SLOWER ALTERNATIVE: binascii.crc32 https://maze.io/2009/10/15/generating-crc32-in-python/

# TODO: using php function hash_file  http://php.net/manual/it/function.hash-file.php
#2FIX: php -r "\$hash=hash_file('crc32b', \"$@\"); \$array=unpack('N', pack('H*', \$hash)); printf( \"%x  $@\n\", \$array[1] );"
#[ $? -eq 0 ] && exit 0

# TODO: using perl http://rosettacode.org/wiki/CRC-32#Perl

# TODO: using CodExt https://github.com/dhondta/python-codext

# WANTED: alternative using awk only http://stackoverflow.com/questions/4994537/calculating-crc-in-awk

# alternative using cksum+awk from http://hints.macworld.com/article.php?story=20041227082911874
# MEMO: "-o3" switch is available in cksum from "freebsd-buildutils" and is preinstalled in MacOSX
echo -n "$@  "
cksum -o3 "$@" | awk '{ printf("%x%02x\n", int($1/256),$1%256) }'
[ $? -eq 0 ] && exit 0
freebsd-cksum -o3 "$@" | awk '{ printf("%x%02x\n", int($1/256),$1%256) }'
[ $? -eq 0 ] && exit 0

# alternative using gzip+gunzip+tempfile (slower)
# MEMO:"-v" switch is not in busybox, and it does not return error for that
#gzip -kf "$@" > "$TMPDIR/.$$.tmp"
#gunzip -lv < "$TMPDIR/.$$.tmp" | cut -d' ' -f2
#if [ $? -eq 0 ]; then
#	rm "$TMPDIR/.$$.tmp"
#	exit 0
#fi

# alternative using pure bash script (not compatible with busybox sh, buggy with big files)  https://gist.github.com/BluntBlade/7891642

#else
exit 127
