#!/bin/sh

# args checking
if [ "$#" -lt 1 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
	echo "usage: $(basename $0) MEDIA_FILE"
	echo
	exit 0
elif [ ! -f "$1" ]; then
	echo "$(basename $0) error: file does not exist: $1" >&2
	exit 1
fi

INPUTFILE="$1"
INPUTFILEEXT=$( echo -n "$INPUTFILE" | rev | cut -d'.' -f1 | rev )
INPUTFILEEXT=$( echo -n $INPUTFILEEXT | tr '[A-Z]' '[a-z]' ) # force lowercase extension
INPUTFILETYPE=$( file -b -i "$INPUTFILE" | cut -d';' -f1 )


case $INPUTFILETYPE in
	image/* )
		# TODO: perceptual hashes https://github.com/corona10/goimagehash/issues/62
		
		if which oiiotool >/dev/null 2>&1 ; then
			echo "$0: cryptographic hashes via oiiotool: "
			oiiotool --hash "$INPUTFILE"
			echo
		fi
		;;
		
	audio/* )

		# audio fingerprinting via Chromaprint  https://github.com/acoustid/chromaprint
		echo "$0: Chromaprint: "
		if which fpcalc >/dev/null 2>&1 ; then
			fpcalc  "$INPUTFILE"  
		else
			# https://ffmpeg.org/ffmpeg-formats.html#chromaprint-1
			ffmpeg -loglevel error  -i "$INPUTFILE" -f chromaprint - 2>/dev/null   # -algorithm 2 
			# -length SECS   Restrict the duration of the processed input audio (default 120)
			# -algorithm NUM Set the algorithm method (default 2)
		fi
		echo
		;;
esac


case $INPUTFILETYPE in
	image/*|audio/*|video/* )
		# TODO: video fingerprinting

		echo "$0: cryptographic hashes via ffmpeg: "
		ffmpeg -loglevel error -i "$INPUTFILE" -f crc - 2>/dev/null  # faster
		#ffmpeg -loglevel error -i "$INPUTFILE" -f md5 - 2>/dev/null
		ffmpeg -loglevel error -i "$INPUTFILE" -f hash - 2>/dev/null  # default to SHA256 (slowest)
		echo
		
		#TODO: alternative using vlc
		#vlc -I rc "$INPUTFILE" :sout='#std{mux=raw,access=file,dst=-}' vlc://quit | md5sum
		;;
esac
