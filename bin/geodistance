#!/bin/bash

# source: https://ethertubes.com/bash-snippet-calculating-the-distance-between-2-coordinates/
    
deg2rad () {
        bc -l <<< "$1 * 0.0174532925"
}

rad2deg () {
        bc -l <<< "$1 * 57.2957795"
}

acos () {
        pi="3.141592653589793"
        bc -l <<<"$pi / 2 - a($1 / sqrt(1 - $1 * $1))"
}

distance () {
        lon_1="$1"
        lat_1="$2"
        lon_2="$3"
        lat_2="$4"
        delta_lat=`bc <<<"$lat_2 - $lat_1"`
        delta_lon=`bc <<<"$lon_2 - $lon_1"`
        lat_1="`deg2rad $lat_1`"
        lon_1="`deg2rad $lon_1`"
        lat_2="`deg2rad $lat_2`"
        lon_2="`deg2rad $lon_2`"
        delta_lat="`deg2rad $delta_lat`"
        delta_lon="`deg2rad $delta_lon`"

        distance=`bc -l <<< "s($lat_1) * s($lat_2) + c($lat_1) * c($lat_2) * c($delta_lon)"`
        distance=`acos $distance`
        distance="`rad2deg $distance`"
        #miles:
        #distance=`bc -l <<< "$distance * 60 * 1.15078"`
        # km:
        distance=`bc -l <<< "$distance * 60 * 1.15078 * 1.609344"`
        distance=`bc <<<"scale=4; $distance / 1"`
        echo "$distance km"
}

if [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ -z "$4" ] || [ "$1" = "-" ] ; then
	echo "usage: $(basename $0) LON1 LAT1 LON2 LAT2 "
	echo
	exit 0
fi

#else
distance $1 $2 $3 $4
