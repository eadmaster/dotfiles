

# TODO: check args

MACADDR_DB_FILE=$PENDRIVE/Documents/db/mynicmac.csv

echo "$(basename $0): scanning local network (any interface)..." >&2

ip neigh | grep REACHABLE

echo

ARPSCAN="$(sudo arp-scan --localnet)"
echo "$ARPSCAN"

# check individual mac addresses
while read -r line
do
	#case "$line" in #*) echo "skipped: $line" ; esac  # skip lines starting with "#"
	curr_mac_addr=$(echo $line | cut -d, -f1)
	curr_device=$(echo $line | tr -d '\r' | cut -d, -f2-)
	echo "$ARPSCAN" | grep -i -q "$curr_mac_addr"
	[ $? -eq 0 ] && echo -e "$(basename $0): \e[33m$curr_device\e[39m is\e[32m online \e[39m" >&2
	# TODO: also check a db of well-known devices
done  <  "$MACADDR_DB_FILE"

echo

# wifi scan
if [ $(nmcli radio wifi) = "disabled" ]; then
	echo "$(basename $0) info: wifi is turned off, cannot scan for APs..." >&2
else
	echo "$(basename $0) info: scanning wifi APs..." >&2
	#NO(TOO VERBOSE)? sudo iwlist wlan0 scan 
	#NO(TOO VERBOSE)? sudo iw dev wlan0 scan
	nmcli dev wifi list
fi

echo

echo "$(basename $0): zeroconf/mDNS/Bonjour scan..." >&2
avahi-browse -a --ignore-local --terminate #--parsable 
[ $? -ne 0 ] && mdns-scan
#[ $? -ne 0 ] && nmap --script=broadcast-dns-service-discovery 192.168.1.*
#gssdp-discover -i $IFACE --timeout=3
#upnpinfo 192.168.1.*"  # TODO: filter localhost?

echo

# UPNP scan
# gssdp-discover -i $IFACE --timeout=3 

echo

# NetBIOS scan (windows machines)
echo "$(basename $0) info: NetBIOS scan..." >&2
sudo nbtscan 192.168.1.0/24 
[ $? -ne 0 ] && nmap --script smb-os-discovery -p 445 ${BASEADDR}.1.*  #-v

# TODO: more alternatives:
# https://superuser.com/questions/311019/display-list-of-computers-on-a-lan-in-linux
# https://unix.stackexchange.com/questions/307399/how-can-i-view-all-device-names-on-lan

# TODO: sudo bettercap ... net.show

echo

# bluetooth devices scan
hciconfig | grep -q DOWN  # check if BT radio is tuned on:  https://askubuntu.com/questions/144655/how-to-check-bluetooth-status-via-terminal
if [ $? -eq 0 ]; then
	echo "$(basename $0) info: BT is turned off or not available..." >&2
else
	echo "$(basename $0) info: scanning BT devices..." >&2
	#NO(TOO VERBOSE)? btscan
	hcitool scan --info --oui --class
	# BLE scan
	sudo timeout -sINT 5s hcitool lescan
fi

echo

# SDR radio scan
SoapySDRUtil --find 2> /dev/null | grep -q "rtlsdr"  # check if a SDR device is connected  # TODO: ALT.: if [ -d /dev/?? ]
if [ $? -ne 0 ]; then
	echo "$(basename $0) info: no SDR device found..." >&2
else
	radioscan
fi

# python-broadlink  https://github.com/mjg59/python-broadlink/tree/master/cli
broadlink_discovery #--timeout 10

# tinytuya  https://github.com/jasonacox/tinytuya
#python -m tinytuya scan 10  # 10=MAX_TIME  # TODO: disable saving snapshot.json
